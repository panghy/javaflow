name: Publish to Maven Central

on:
  release:
    types: [ created ]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'The release tag to publish (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.release_tag || github.ref }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set version from tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Manual trigger - use provided release tag
            TAG_VERSION=${{ github.event.inputs.release_tag }}
            # Remove 'v' prefix if present
            TAG_VERSION=${TAG_VERSION#v}
          else
            # Automatic trigger from release event
            TAG_VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "Setting project version to $TAG_VERSION"
          sed -i "s/version = '.*'/version = '$TAG_VERSION'/g" build.gradle

      - name: Publish to Maven Central
        run: ./gradlew publishToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SONATYPE_HOST: S01
          SONATYPE_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}